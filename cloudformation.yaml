AWSTemplateFormatVersion: '2010-09-09'
Description: 'SSOSYNC Lambda as container'

Parameters:
  ScheduleExpression:
    Type: String
    Description: Schedule for trigger the execution of ssosync (see CloudWatch schedule expressions)
    Default: rate(1 day)
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging
    Default: warn
    AllowedValues:
      - panic
      - fatal
      - error
      - warn
      - info
      - debug
      - trace
  LogFormat:
    Type: String
    Description: Log format for Lambda function logging
    Default: json
    AllowedValues:
      - json
      - text
  GroupMatch:
    Type: String
    Description: Group in Google LDAP to be synced across
    Default: "name:dev*"
  GoogleCredentials:
    Type: String
    Description: Credentials to log into Google (content of credentials.json)
    Default: "/global/ssosync/google-credentials"
  GoogleAdminEmail:
    Type: String
    Description: Google Admin email
    Default: "/global/ssosync/google-admin-email"
  SCIMEndpointUrl:
    Type: String
    Description: AWS SSO SCIM Endpoint Url
    Default: "/global/ssosync/scim-endpoint-url"
  SCIMEndpointAccessToken:
    Type: String
    Description: AWS SSO SCIM AccessToken
    Default: "/global/ssosync/scim-endpoint-access-token"
  ImageName:
    Type: String
    Default: "ssosync"
  ImageTag:
    Type: String
    Default: "latest"
  VPC:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/tooling/vpc/id'
  Subnets:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/tooling/subnets/private'

Resources:
  SSOSYNCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId: !Ref VPC

  SSOSYNCLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        !Join
          - ""
          - - "/aws/lambda/"
            - !Ref SSOSYNCFunction
      RetentionInDays: 7

  SSOSYNCRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::040059739494:policy/WAV-tooling-kms-decrypt
      Policies:
        - PolicyName: SSMGetParameterPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeInstances"
                  - "ec2:AttachNetworkInterface"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "ssm:Get*"
                  - "ssm:List*"
                  - "ssm:Decrypt"
                  - "ssm:Describe*"
                Resource: "*"

  SSOSYNCFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}:${ImageTag}
      Description: "ssosync function"
      Environment:
        Variables:
          GROUP_MATCH: !Ref GroupMatch
      ImageConfig:
        Command:
          - !Ref GoogleCredentials
          - !Ref GoogleAdminEmail
          - !Ref SCIMEndpointUrl
          - !Ref SCIMEndpointAccessToken
        EntryPoint:
          - '/var/task/entrypoint.sh'
      MemorySize: 1024
      PackageType: Image
      Role: !GetAtt SSOSYNCRole.Arn
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt SSOSYNCSecurityGroup.GroupId
        SubnetIds: !Split
          - ","
          - !Ref Subnets

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: !Ref ScheduleExpression
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt SSOSYNCFunction.Arn
          Id: "DailySSOSyncRun"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SSOSYNCFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ScheduledRule.Arn
