AWSTemplateFormatVersion: '2010-09-09'
Description: 'SSOSYNC Lambda as container'

Parameters:
  ScheduleExpression:
    Type: String
    Description: Schedule for trigger the execution of ssosync (see CloudWatch schedule expressions)
    Default: rate(15 minutes)
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging
    Default: warn
    AllowedValues:
      - panic
      - fatal
      - error
      - warn
      - info
      - debug
      - trace
  LogFormat:
    Type: String
    Description: Log format for Lambda function logging
    Default: json
    AllowedValues:
      - json
      - text
  GoogleCredentials:
    Type: String
    Description: Credentials to log into Google (content of credentials.json)
    NoEcho: true
  GoogleAdminEmail:
    Type: String
    Description: Google Admin email
    NoEcho: true
  SCIMEndpointUrl:
    Type: String
    Description: AWS SSO SCIM Endpoint Url
    NoEcho: true
  SCIMEndpointAccessToken:
    Type: String
    Description: AWS SSO SCIM AccessToken
    NoEcho: true
  ImageName:
    Type: String
    Default: 'ssosync'
  ImageTag:
    Type: String
  Subnets:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/tooling/subnets/private'

Resources:
  AWSGoogleCredentialsSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: SSOSyncGoogleCredentials
      SecretString: !Ref GoogleCredentials

  AWSGoogleAdminEamil:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: SSOSyncGoogleAdminEmail
      SecretString: !Ref GoogleAdminEmail

  AWSSCIMEndpointSecret: # This can be moved to custom provider
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: SSOSyncSCIMEndpointUrl
      SecretString: !Ref SCIMEndpointUrl

  AWSSCIMAccessTokenSecret: # This can be moved to custom provider
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: SSOSyncSCIMAccessToken
      SecretString: !Ref SCIMEndpointAccessToken

  SSOSYNCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId: vpc-0be1d590e7ab8b92b
        SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0

  SSOSYNCRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ImageName
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
              - "ecr:DescribeImages"

  SSOSYNCRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SSMGetParameterPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:Get*"
                Resource:
                  - !Ref AWSGoogleCredentialsSecret
                  - !Ref AWSGoogleAdminEamil
                  - !Ref AWSSCIMEndpointSecret
                  - !Ref AWSSCIMAccessTokenSecret

  SSOSYNCFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}:${ImageTag}
      Description: String
      Environment:
        Variables:
          SSOSYNC_LOG_LEVEL: !Ref LogLevel
          SSOSYNC_LOG_FORMAT: !Ref LogFormat
          SSOSYNC_GOOGLE_CREDENTIALS: !Ref AWSGoogleCredentialsSecret
          SSOSYNC_GOOGLE_ADMIN: !Ref AWSGoogleAdminEamil
          SSOSYNC_SCIM_ENDPOINT: !Ref AWSSCIMEndpointSecret
          SSOSYNC_SCIM_ACCESS_TOKEN: !Ref AWSSCIMAccessTokenSecret
      FunctionName: String
      Handler: String
      ImageConfig:
        Command:
          - '-d'
          - '-g'
          - 'name:dev*'
          - '-u'
          - 'peter@getwaave.io'
        EntryPoint:
          - '/var/task/ssosync'
      KmsKeyArn: String
      Layers:
        - String
      MemorySize: 1024
      PackageType: Image
      Role: !Ref SSOSYNCRole
      Runtime: String
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt SSOSYNCSecurityGroup.GroupId
        SubnetIds: !Split
          - ","
          - !Ref Subnets
